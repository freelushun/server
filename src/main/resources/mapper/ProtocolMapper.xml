<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.free.wordbookserver.mapper.ProtocolMapper">
  <resultMap id="BaseResultMap" type="com.free.wordbookserver.domain.Protocol">
    <id column="protocol_id" jdbcType="INTEGER" property="protocolId" />
    <result column="protocol_name" jdbcType="VARCHAR" property="protocolName" />
    <result column="protocol_comment" jdbcType="VARCHAR" property="protocolComment" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.free.wordbookserver.domain.Protocol">
    <result column="protocol_content" jdbcType="LONGVARCHAR" property="protocolContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    protocol_id, protocol_name, protocol_comment
  </sql>
  <sql id="Blob_Column_List">
    protocol_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.free.wordbookserver.domain.ProtocolExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from protocol
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.free.wordbookserver.domain.ProtocolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from protocol
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from protocol
    where protocol_id = #{protocolId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from protocol
    where protocol_id = #{protocolId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.free.wordbookserver.domain.ProtocolExample">
    delete from protocol
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.free.wordbookserver.domain.Protocol">
    insert into protocol (protocol_id, protocol_name, protocol_comment, 
      protocol_content)
    values (#{protocolId,jdbcType=INTEGER}, #{protocolName,jdbcType=VARCHAR}, #{protocolComment,jdbcType=VARCHAR}, 
      #{protocolContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.free.wordbookserver.domain.Protocol">
    insert into protocol
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="protocolId != null">
        protocol_id,
      </if>
      <if test="protocolName != null">
        protocol_name,
      </if>
      <if test="protocolComment != null">
        protocol_comment,
      </if>
      <if test="protocolContent != null">
        protocol_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="protocolId != null">
        #{protocolId,jdbcType=INTEGER},
      </if>
      <if test="protocolName != null">
        #{protocolName,jdbcType=VARCHAR},
      </if>
      <if test="protocolComment != null">
        #{protocolComment,jdbcType=VARCHAR},
      </if>
      <if test="protocolContent != null">
        #{protocolContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.free.wordbookserver.domain.ProtocolExample" resultType="java.lang.Long">
    select count(*) from protocol
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update protocol
    <set>
      <if test="record.protocolId != null">
        protocol_id = #{record.protocolId,jdbcType=INTEGER},
      </if>
      <if test="record.protocolName != null">
        protocol_name = #{record.protocolName,jdbcType=VARCHAR},
      </if>
      <if test="record.protocolComment != null">
        protocol_comment = #{record.protocolComment,jdbcType=VARCHAR},
      </if>
      <if test="record.protocolContent != null">
        protocol_content = #{record.protocolContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update protocol
    set protocol_id = #{record.protocolId,jdbcType=INTEGER},
      protocol_name = #{record.protocolName,jdbcType=VARCHAR},
      protocol_comment = #{record.protocolComment,jdbcType=VARCHAR},
      protocol_content = #{record.protocolContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update protocol
    set protocol_id = #{record.protocolId,jdbcType=INTEGER},
      protocol_name = #{record.protocolName,jdbcType=VARCHAR},
      protocol_comment = #{record.protocolComment,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.free.wordbookserver.domain.Protocol">
    update protocol
    <set>
      <if test="protocolName != null">
        protocol_name = #{protocolName,jdbcType=VARCHAR},
      </if>
      <if test="protocolComment != null">
        protocol_comment = #{protocolComment,jdbcType=VARCHAR},
      </if>
      <if test="protocolContent != null">
        protocol_content = #{protocolContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where protocol_id = #{protocolId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.free.wordbookserver.domain.Protocol">
    update protocol
    set protocol_name = #{protocolName,jdbcType=VARCHAR},
      protocol_comment = #{protocolComment,jdbcType=VARCHAR},
      protocol_content = #{protocolContent,jdbcType=LONGVARCHAR}
    where protocol_id = #{protocolId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.free.wordbookserver.domain.Protocol">
    update protocol
    set protocol_name = #{protocolName,jdbcType=VARCHAR},
      protocol_comment = #{protocolComment,jdbcType=VARCHAR}
    where protocol_id = #{protocolId,jdbcType=INTEGER}
  </update>
</mapper>